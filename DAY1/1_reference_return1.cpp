// F43 ~ F44 ( 22 page)

int x = 10;

int f1() { return x; }	// 1. x 반환
						// 2. x의 값(10) 반환 >>>> 답

int& f2() { return x; }  // x의 값(10) 반환이 아닌 x 자체를 반환

int main()
{
	int ret = f1(); //  ok

	f1() = 20; // error.  10 = 20
//	f2() = 20; // ok. 
	// 왜(언제) 함수 호출을 등호의 왼쪽에 놓는가요 ?
	std::vector<int> v(10);
	v[0] = 10; // v.operator[](0) = 10 입니다.
				// 즉, operator[]() 함수가 등호의 왼쪽에 있습니다.
				// 연산자 재정의 기술은 등호의 왼쪽에 올경우가 많습니다.
				// 그래서 , operator[] 의 반환 타입은 참조 이어야 합니다.
}
// 왜 함수가 참조를 반환하는가 ?
// 1. 임시객체를 만들지 않기 위해서
// 2. 함수 호출을 등호의 왼쪽에 올수 있게 하기 위해!
//    ==> v[0] = 10;  의 원리는 "v.operator[](0) = 10"


